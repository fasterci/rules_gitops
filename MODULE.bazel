module(
    name = "rules_gitops",
    version = "0.50.0",
)

bazel_dep(name = "aspect_bazel_lib", version = "2.15.3")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "rules_oci", version = "2.2.6")
bazel_dep(name = "rules_pkg", version = "1.0.1")
bazel_dep(name = "rules_go", version = "0.54.0")

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(version = "1.23.9")

bazel_dep(name = "gazelle", version = "0.43.0")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    "com_github_ghodss_yaml",
    "com_github_google_go_cmp",
    "com_github_google_go_containerregistry",
    "com_github_google_go_github_v32",
    "com_github_xanzy_go_gitlab",
    "io_k8s_api",
    "io_k8s_apimachinery",
    "io_k8s_client_go",
    "org_golang_google_protobuf",
    "org_golang_x_oauth2",
    "org_golang_x_sync",
)

toolchains = use_extension(
    "@rules_gitops//gitops:extensions.bzl",
    "toolchains",
)
toolchains.kustomize()
use_repo(toolchains, "kustomize_bin", "kustomize_toolchains")

register_toolchains("@kustomize_toolchains//:all")

kubeconfig = use_repo_rule("@rules_gitops//skylib:k8s.bzl", "kubeconfig")

kubeconfig(
    name = "k8s_test",
    cluster = "mycluster",
    use_host_config = True,
)

bazel_dep(name = "buildifier_prebuilt", version = "8.0.3", dev_dependency = True)

bazel_dep(name = "rules_proto", version = "7.1.0")
bazel_dep(name = "toolchains_protoc", version = "0.4.1")

protoc = use_extension("@toolchains_protoc//protoc:extensions.bzl", "protoc")
protoc.toolchain(
    # Creates a repository to satisfy well-known-types dependencies such as
    # deps=["@com_google_protobuf//:any_proto"]
    google_protobuf = "com_google_protobuf",
    # Pin to any version of protoc
    version = "v27.1",
)
use_repo(protoc, "com_google_protobuf", "toolchains_protoc_hub")

register_toolchains("@toolchains_protoc_hub//:all")

# protoc = use_extension("@toolchains_protoc//protoc:extensions.bzl", "protoc")
# protoc.toolchain(
#     # Creates a repository to satisfy well-known-types dependencies such as
#     # deps=["@com_google_protobuf//:any_proto"]
#     google_protobuf = "com_google_protobuf",
#     version = "v27.1",
# )
# use_repo(protoc, "com_google_protobuf", "toolchains_protoc_hub")
