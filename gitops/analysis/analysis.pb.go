// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.27.1
// source: gitops/analysis/analysis.proto

package analysis

import (
	blaze_query "github.com/fasterci/rules_gitops/gitops/blaze_query"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActionGraphContainer struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Artifacts         []*Artifact            `protobuf:"bytes,1,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	Actions           []*Action              `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
	Targets           []*Target              `protobuf:"bytes,3,rep,name=targets,proto3" json:"targets,omitempty"`
	DepSetOfFiles     []*DepSetOfFiles       `protobuf:"bytes,4,rep,name=dep_set_of_files,json=depSetOfFiles,proto3" json:"dep_set_of_files,omitempty"`
	Configuration     []*Configuration       `protobuf:"bytes,5,rep,name=configuration,proto3" json:"configuration,omitempty"`
	AspectDescriptors []*AspectDescriptor    `protobuf:"bytes,6,rep,name=aspect_descriptors,json=aspectDescriptors,proto3" json:"aspect_descriptors,omitempty"`
	RuleClasses       []*RuleClass           `protobuf:"bytes,7,rep,name=rule_classes,json=ruleClasses,proto3" json:"rule_classes,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ActionGraphContainer) Reset() {
	*x = ActionGraphContainer{}
	mi := &file_gitops_analysis_analysis_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionGraphContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionGraphContainer) ProtoMessage() {}

func (x *ActionGraphContainer) ProtoReflect() protoreflect.Message {
	mi := &file_gitops_analysis_analysis_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionGraphContainer.ProtoReflect.Descriptor instead.
func (*ActionGraphContainer) Descriptor() ([]byte, []int) {
	return file_gitops_analysis_analysis_proto_rawDescGZIP(), []int{0}
}

func (x *ActionGraphContainer) GetArtifacts() []*Artifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

func (x *ActionGraphContainer) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *ActionGraphContainer) GetTargets() []*Target {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *ActionGraphContainer) GetDepSetOfFiles() []*DepSetOfFiles {
	if x != nil {
		return x.DepSetOfFiles
	}
	return nil
}

func (x *ActionGraphContainer) GetConfiguration() []*Configuration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *ActionGraphContainer) GetAspectDescriptors() []*AspectDescriptor {
	if x != nil {
		return x.AspectDescriptors
	}
	return nil
}

func (x *ActionGraphContainer) GetRuleClasses() []*RuleClass {
	if x != nil {
		return x.RuleClasses
	}
	return nil
}

type Artifact struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExecPath       string                 `protobuf:"bytes,2,opt,name=exec_path,json=execPath,proto3" json:"exec_path,omitempty"`
	IsTreeArtifact bool                   `protobuf:"varint,3,opt,name=is_tree_artifact,json=isTreeArtifact,proto3" json:"is_tree_artifact,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Artifact) Reset() {
	*x = Artifact{}
	mi := &file_gitops_analysis_analysis_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Artifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artifact) ProtoMessage() {}

func (x *Artifact) ProtoReflect() protoreflect.Message {
	mi := &file_gitops_analysis_analysis_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artifact.ProtoReflect.Descriptor instead.
func (*Artifact) Descriptor() ([]byte, []int) {
	return file_gitops_analysis_analysis_proto_rawDescGZIP(), []int{1}
}

func (x *Artifact) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Artifact) GetExecPath() string {
	if x != nil {
		return x.ExecPath
	}
	return ""
}

func (x *Artifact) GetIsTreeArtifact() bool {
	if x != nil {
		return x.IsTreeArtifact
	}
	return false
}

type Action struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	TargetId             string                 `protobuf:"bytes,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	AspectDescriptorIds  []string               `protobuf:"bytes,2,rep,name=aspect_descriptor_ids,json=aspectDescriptorIds,proto3" json:"aspect_descriptor_ids,omitempty"`
	ActionKey            string                 `protobuf:"bytes,3,opt,name=action_key,json=actionKey,proto3" json:"action_key,omitempty"`
	Mnemonic             string                 `protobuf:"bytes,4,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	ConfigurationId      string                 `protobuf:"bytes,5,opt,name=configuration_id,json=configurationId,proto3" json:"configuration_id,omitempty"`
	Arguments            []string               `protobuf:"bytes,6,rep,name=arguments,proto3" json:"arguments,omitempty"`
	EnvironmentVariables []*KeyValuePair        `protobuf:"bytes,7,rep,name=environment_variables,json=environmentVariables,proto3" json:"environment_variables,omitempty"`
	InputDepSetIds       []string               `protobuf:"bytes,8,rep,name=input_dep_set_ids,json=inputDepSetIds,proto3" json:"input_dep_set_ids,omitempty"`
	OutputIds            []string               `protobuf:"bytes,9,rep,name=output_ids,json=outputIds,proto3" json:"output_ids,omitempty"`
	DiscoversInputs      bool                   `protobuf:"varint,10,opt,name=discovers_inputs,json=discoversInputs,proto3" json:"discovers_inputs,omitempty"`
	ExecutionInfo        []*KeyValuePair        `protobuf:"bytes,11,rep,name=execution_info,json=executionInfo,proto3" json:"execution_info,omitempty"`
	ParamFiles           []*ParamFile           `protobuf:"bytes,12,rep,name=param_files,json=paramFiles,proto3" json:"param_files,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Action) Reset() {
	*x = Action{}
	mi := &file_gitops_analysis_analysis_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_gitops_analysis_analysis_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_gitops_analysis_analysis_proto_rawDescGZIP(), []int{2}
}

func (x *Action) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *Action) GetAspectDescriptorIds() []string {
	if x != nil {
		return x.AspectDescriptorIds
	}
	return nil
}

func (x *Action) GetActionKey() string {
	if x != nil {
		return x.ActionKey
	}
	return ""
}

func (x *Action) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

func (x *Action) GetConfigurationId() string {
	if x != nil {
		return x.ConfigurationId
	}
	return ""
}

func (x *Action) GetArguments() []string {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *Action) GetEnvironmentVariables() []*KeyValuePair {
	if x != nil {
		return x.EnvironmentVariables
	}
	return nil
}

func (x *Action) GetInputDepSetIds() []string {
	if x != nil {
		return x.InputDepSetIds
	}
	return nil
}

func (x *Action) GetOutputIds() []string {
	if x != nil {
		return x.OutputIds
	}
	return nil
}

func (x *Action) GetDiscoversInputs() bool {
	if x != nil {
		return x.DiscoversInputs
	}
	return false
}

func (x *Action) GetExecutionInfo() []*KeyValuePair {
	if x != nil {
		return x.ExecutionInfo
	}
	return nil
}

func (x *Action) GetParamFiles() []*ParamFile {
	if x != nil {
		return x.ParamFiles
	}
	return nil
}

type Target struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Label         string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	RuleClassId   string                 `protobuf:"bytes,3,opt,name=rule_class_id,json=ruleClassId,proto3" json:"rule_class_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Target) Reset() {
	*x = Target{}
	mi := &file_gitops_analysis_analysis_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_gitops_analysis_analysis_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_gitops_analysis_analysis_proto_rawDescGZIP(), []int{3}
}

func (x *Target) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Target) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Target) GetRuleClassId() string {
	if x != nil {
		return x.RuleClassId
	}
	return ""
}

type RuleClass struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuleClass) Reset() {
	*x = RuleClass{}
	mi := &file_gitops_analysis_analysis_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleClass) ProtoMessage() {}

func (x *RuleClass) ProtoReflect() protoreflect.Message {
	mi := &file_gitops_analysis_analysis_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleClass.ProtoReflect.Descriptor instead.
func (*RuleClass) Descriptor() ([]byte, []int) {
	return file_gitops_analysis_analysis_proto_rawDescGZIP(), []int{4}
}

func (x *RuleClass) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RuleClass) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AspectDescriptor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Parameters    []*KeyValuePair        `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AspectDescriptor) Reset() {
	*x = AspectDescriptor{}
	mi := &file_gitops_analysis_analysis_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AspectDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AspectDescriptor) ProtoMessage() {}

func (x *AspectDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_gitops_analysis_analysis_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AspectDescriptor.ProtoReflect.Descriptor instead.
func (*AspectDescriptor) Descriptor() ([]byte, []int) {
	return file_gitops_analysis_analysis_proto_rawDescGZIP(), []int{5}
}

func (x *AspectDescriptor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AspectDescriptor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AspectDescriptor) GetParameters() []*KeyValuePair {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type DepSetOfFiles struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TransitiveDepSetIds []string               `protobuf:"bytes,2,rep,name=transitive_dep_set_ids,json=transitiveDepSetIds,proto3" json:"transitive_dep_set_ids,omitempty"`
	DirectArtifactIds   []string               `protobuf:"bytes,3,rep,name=direct_artifact_ids,json=directArtifactIds,proto3" json:"direct_artifact_ids,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DepSetOfFiles) Reset() {
	*x = DepSetOfFiles{}
	mi := &file_gitops_analysis_analysis_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DepSetOfFiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepSetOfFiles) ProtoMessage() {}

func (x *DepSetOfFiles) ProtoReflect() protoreflect.Message {
	mi := &file_gitops_analysis_analysis_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepSetOfFiles.ProtoReflect.Descriptor instead.
func (*DepSetOfFiles) Descriptor() ([]byte, []int) {
	return file_gitops_analysis_analysis_proto_rawDescGZIP(), []int{6}
}

func (x *DepSetOfFiles) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DepSetOfFiles) GetTransitiveDepSetIds() []string {
	if x != nil {
		return x.TransitiveDepSetIds
	}
	return nil
}

func (x *DepSetOfFiles) GetDirectArtifactIds() []string {
	if x != nil {
		return x.DirectArtifactIds
	}
	return nil
}

type Configuration struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Mnemonic      string                 `protobuf:"bytes,2,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	PlatformName  string                 `protobuf:"bytes,3,opt,name=platform_name,json=platformName,proto3" json:"platform_name,omitempty"`
	Checksum      string                 `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Configuration) Reset() {
	*x = Configuration{}
	mi := &file_gitops_analysis_analysis_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Configuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configuration) ProtoMessage() {}

func (x *Configuration) ProtoReflect() protoreflect.Message {
	mi := &file_gitops_analysis_analysis_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Configuration.ProtoReflect.Descriptor instead.
func (*Configuration) Descriptor() ([]byte, []int) {
	return file_gitops_analysis_analysis_proto_rawDescGZIP(), []int{7}
}

func (x *Configuration) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Configuration) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

func (x *Configuration) GetPlatformName() string {
	if x != nil {
		return x.PlatformName
	}
	return ""
}

func (x *Configuration) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

type KeyValuePair struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyValuePair) Reset() {
	*x = KeyValuePair{}
	mi := &file_gitops_analysis_analysis_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValuePair) ProtoMessage() {}

func (x *KeyValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_gitops_analysis_analysis_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValuePair.ProtoReflect.Descriptor instead.
func (*KeyValuePair) Descriptor() ([]byte, []int) {
	return file_gitops_analysis_analysis_proto_rawDescGZIP(), []int{8}
}

func (x *KeyValuePair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValuePair) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ConfiguredTarget struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        *blaze_query.Target    `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Configuration *Configuration         `protobuf:"bytes,2,opt,name=configuration,proto3" json:"configuration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfiguredTarget) Reset() {
	*x = ConfiguredTarget{}
	mi := &file_gitops_analysis_analysis_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfiguredTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfiguredTarget) ProtoMessage() {}

func (x *ConfiguredTarget) ProtoReflect() protoreflect.Message {
	mi := &file_gitops_analysis_analysis_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfiguredTarget.ProtoReflect.Descriptor instead.
func (*ConfiguredTarget) Descriptor() ([]byte, []int) {
	return file_gitops_analysis_analysis_proto_rawDescGZIP(), []int{9}
}

func (x *ConfiguredTarget) GetTarget() *blaze_query.Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *ConfiguredTarget) GetConfiguration() *Configuration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type CqueryResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*ConfiguredTarget    `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CqueryResult) Reset() {
	*x = CqueryResult{}
	mi := &file_gitops_analysis_analysis_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CqueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CqueryResult) ProtoMessage() {}

func (x *CqueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_gitops_analysis_analysis_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CqueryResult.ProtoReflect.Descriptor instead.
func (*CqueryResult) Descriptor() ([]byte, []int) {
	return file_gitops_analysis_analysis_proto_rawDescGZIP(), []int{10}
}

func (x *CqueryResult) GetResults() []*ConfiguredTarget {
	if x != nil {
		return x.Results
	}
	return nil
}

type ParamFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExecPath      string                 `protobuf:"bytes,1,opt,name=exec_path,json=execPath,proto3" json:"exec_path,omitempty"`
	Arguments     []string               `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParamFile) Reset() {
	*x = ParamFile{}
	mi := &file_gitops_analysis_analysis_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParamFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamFile) ProtoMessage() {}

func (x *ParamFile) ProtoReflect() protoreflect.Message {
	mi := &file_gitops_analysis_analysis_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamFile.ProtoReflect.Descriptor instead.
func (*ParamFile) Descriptor() ([]byte, []int) {
	return file_gitops_analysis_analysis_proto_rawDescGZIP(), []int{11}
}

func (x *ParamFile) GetExecPath() string {
	if x != nil {
		return x.ExecPath
	}
	return ""
}

func (x *ParamFile) GetArguments() []string {
	if x != nil {
		return x.Arguments
	}
	return nil
}

var File_gitops_analysis_analysis_proto protoreflect.FileDescriptor

const file_gitops_analysis_analysis_proto_rawDesc = "" +
	"\n" +
	"\x1egitops/analysis/analysis.proto\x12\banalysis\x1a\x1egitops/blaze_query/build.proto\"\xa4\x03\n" +
	"\x14ActionGraphContainer\x120\n" +
	"\tartifacts\x18\x01 \x03(\v2\x12.analysis.ArtifactR\tartifacts\x12*\n" +
	"\aactions\x18\x02 \x03(\v2\x10.analysis.ActionR\aactions\x12*\n" +
	"\atargets\x18\x03 \x03(\v2\x10.analysis.TargetR\atargets\x12@\n" +
	"\x10dep_set_of_files\x18\x04 \x03(\v2\x17.analysis.DepSetOfFilesR\rdepSetOfFiles\x12=\n" +
	"\rconfiguration\x18\x05 \x03(\v2\x17.analysis.ConfigurationR\rconfiguration\x12I\n" +
	"\x12aspect_descriptors\x18\x06 \x03(\v2\x1a.analysis.AspectDescriptorR\x11aspectDescriptors\x126\n" +
	"\frule_classes\x18\a \x03(\v2\x13.analysis.RuleClassR\vruleClasses\"a\n" +
	"\bArtifact\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\texec_path\x18\x02 \x01(\tR\bexecPath\x12(\n" +
	"\x10is_tree_artifact\x18\x03 \x01(\bR\x0eisTreeArtifact\"\x94\x04\n" +
	"\x06Action\x12\x1b\n" +
	"\ttarget_id\x18\x01 \x01(\tR\btargetId\x122\n" +
	"\x15aspect_descriptor_ids\x18\x02 \x03(\tR\x13aspectDescriptorIds\x12\x1d\n" +
	"\n" +
	"action_key\x18\x03 \x01(\tR\tactionKey\x12\x1a\n" +
	"\bmnemonic\x18\x04 \x01(\tR\bmnemonic\x12)\n" +
	"\x10configuration_id\x18\x05 \x01(\tR\x0fconfigurationId\x12\x1c\n" +
	"\targuments\x18\x06 \x03(\tR\targuments\x12K\n" +
	"\x15environment_variables\x18\a \x03(\v2\x16.analysis.KeyValuePairR\x14environmentVariables\x12)\n" +
	"\x11input_dep_set_ids\x18\b \x03(\tR\x0einputDepSetIds\x12\x1d\n" +
	"\n" +
	"output_ids\x18\t \x03(\tR\toutputIds\x12)\n" +
	"\x10discovers_inputs\x18\n" +
	" \x01(\bR\x0fdiscoversInputs\x12=\n" +
	"\x0eexecution_info\x18\v \x03(\v2\x16.analysis.KeyValuePairR\rexecutionInfo\x124\n" +
	"\vparam_files\x18\f \x03(\v2\x13.analysis.ParamFileR\n" +
	"paramFiles\"R\n" +
	"\x06Target\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12\"\n" +
	"\rrule_class_id\x18\x03 \x01(\tR\vruleClassId\"/\n" +
	"\tRuleClass\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"n\n" +
	"\x10AspectDescriptor\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x126\n" +
	"\n" +
	"parameters\x18\x03 \x03(\v2\x16.analysis.KeyValuePairR\n" +
	"parameters\"\x84\x01\n" +
	"\rDepSetOfFiles\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x123\n" +
	"\x16transitive_dep_set_ids\x18\x02 \x03(\tR\x13transitiveDepSetIds\x12.\n" +
	"\x13direct_artifact_ids\x18\x03 \x03(\tR\x11directArtifactIds\"|\n" +
	"\rConfiguration\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bmnemonic\x18\x02 \x01(\tR\bmnemonic\x12#\n" +
	"\rplatform_name\x18\x03 \x01(\tR\fplatformName\x12\x1a\n" +
	"\bchecksum\x18\x04 \x01(\tR\bchecksum\"6\n" +
	"\fKeyValuePair\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"~\n" +
	"\x10ConfiguredTarget\x12+\n" +
	"\x06target\x18\x01 \x01(\v2\x13.blaze_query.TargetR\x06target\x12=\n" +
	"\rconfiguration\x18\x02 \x01(\v2\x17.analysis.ConfigurationR\rconfiguration\"D\n" +
	"\fCqueryResult\x124\n" +
	"\aresults\x18\x01 \x03(\v2\x1a.analysis.ConfiguredTargetR\aresults\"F\n" +
	"\tParamFile\x12\x1b\n" +
	"\texec_path\x18\x01 \x01(\tR\bexecPath\x12\x1c\n" +
	"\targuments\x18\x02 \x03(\tR\targumentsB8\n" +
	"&com.google.devtools.build.lib.analysisB\x0eAnalysisProtosb\x06proto3"

var (
	file_gitops_analysis_analysis_proto_rawDescOnce sync.Once
	file_gitops_analysis_analysis_proto_rawDescData []byte
)

func file_gitops_analysis_analysis_proto_rawDescGZIP() []byte {
	file_gitops_analysis_analysis_proto_rawDescOnce.Do(func() {
		file_gitops_analysis_analysis_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gitops_analysis_analysis_proto_rawDesc), len(file_gitops_analysis_analysis_proto_rawDesc)))
	})
	return file_gitops_analysis_analysis_proto_rawDescData
}

var file_gitops_analysis_analysis_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_gitops_analysis_analysis_proto_goTypes = []any{
	(*ActionGraphContainer)(nil), // 0: analysis.ActionGraphContainer
	(*Artifact)(nil),             // 1: analysis.Artifact
	(*Action)(nil),               // 2: analysis.Action
	(*Target)(nil),               // 3: analysis.Target
	(*RuleClass)(nil),            // 4: analysis.RuleClass
	(*AspectDescriptor)(nil),     // 5: analysis.AspectDescriptor
	(*DepSetOfFiles)(nil),        // 6: analysis.DepSetOfFiles
	(*Configuration)(nil),        // 7: analysis.Configuration
	(*KeyValuePair)(nil),         // 8: analysis.KeyValuePair
	(*ConfiguredTarget)(nil),     // 9: analysis.ConfiguredTarget
	(*CqueryResult)(nil),         // 10: analysis.CqueryResult
	(*ParamFile)(nil),            // 11: analysis.ParamFile
	(*blaze_query.Target)(nil),   // 12: blaze_query.Target
}
var file_gitops_analysis_analysis_proto_depIdxs = []int32{
	1,  // 0: analysis.ActionGraphContainer.artifacts:type_name -> analysis.Artifact
	2,  // 1: analysis.ActionGraphContainer.actions:type_name -> analysis.Action
	3,  // 2: analysis.ActionGraphContainer.targets:type_name -> analysis.Target
	6,  // 3: analysis.ActionGraphContainer.dep_set_of_files:type_name -> analysis.DepSetOfFiles
	7,  // 4: analysis.ActionGraphContainer.configuration:type_name -> analysis.Configuration
	5,  // 5: analysis.ActionGraphContainer.aspect_descriptors:type_name -> analysis.AspectDescriptor
	4,  // 6: analysis.ActionGraphContainer.rule_classes:type_name -> analysis.RuleClass
	8,  // 7: analysis.Action.environment_variables:type_name -> analysis.KeyValuePair
	8,  // 8: analysis.Action.execution_info:type_name -> analysis.KeyValuePair
	11, // 9: analysis.Action.param_files:type_name -> analysis.ParamFile
	8,  // 10: analysis.AspectDescriptor.parameters:type_name -> analysis.KeyValuePair
	12, // 11: analysis.ConfiguredTarget.target:type_name -> blaze_query.Target
	7,  // 12: analysis.ConfiguredTarget.configuration:type_name -> analysis.Configuration
	9,  // 13: analysis.CqueryResult.results:type_name -> analysis.ConfiguredTarget
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_gitops_analysis_analysis_proto_init() }
func file_gitops_analysis_analysis_proto_init() {
	if File_gitops_analysis_analysis_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gitops_analysis_analysis_proto_rawDesc), len(file_gitops_analysis_analysis_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gitops_analysis_analysis_proto_goTypes,
		DependencyIndexes: file_gitops_analysis_analysis_proto_depIdxs,
		MessageInfos:      file_gitops_analysis_analysis_proto_msgTypes,
	}.Build()
	File_gitops_analysis_analysis_proto = out.File
	file_gitops_analysis_analysis_proto_goTypes = nil
	file_gitops_analysis_analysis_proto_depIdxs = nil
}
